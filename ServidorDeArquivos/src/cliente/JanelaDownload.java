/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente;

import base.InfoDeArquivo;
import base.InfoServidorPrincipal;
import java.io.*;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Jorge Augusto
 */
public class JanelaDownload extends javax.swing.JDialog {

    /**
     * Creates new form JanelaDownload
     */
    public JanelaDownload(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Coloa janela no centro da tela
        setLocationRelativeTo(null);
        janelaPai = (JanelaPrincipal) parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelArquivo = new javax.swing.JLabel();
        jLabelServidor = new javax.swing.JLabel();
        jPanelBarraStatus = new javax.swing.JPanel();
        jSeparator = new javax.swing.JSeparator();
        jLabelBarraStatus = new javax.swing.JLabel();
        jButtonCancelar = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Baixando arquivo, aguarde...");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                windowOpenedActionPerformed(evt);
            }
        });

        jLabelArquivo.setText("Arquivo: foto.jpg");

        jLabelServidor.setText("Servidor: Escravo X");

        jLabelBarraStatus.setText("Carregando...");

        javax.swing.GroupLayout jPanelBarraStatusLayout = new javax.swing.GroupLayout(jPanelBarraStatus);
        jPanelBarraStatus.setLayout(jPanelBarraStatusLayout);
        jPanelBarraStatusLayout.setHorizontalGroup(
            jPanelBarraStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarraStatusLayout.createSequentialGroup()
                .addGroup(jPanelBarraStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelBarraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelBarraStatusLayout.setVerticalGroup(
            jPanelBarraStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBarraStatusLayout.createSequentialGroup()
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelBarraStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBarraStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelServidor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelArquivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelServidor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanelBarraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        fecharJanela();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void windowOpenedActionPerformed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowOpenedActionPerformed
        solicitaDownload();
    }//GEN-LAST:event_windowOpenedActionPerformed

    // Este método fecha a janela
    private void fecharJanela() {
        dispose();
    }

        // Este método, cria o socket do cliente e inicia a comunicação com co servidor
    private void iniciarComunicao() {
        try {
            // Conecto ao servidor
            socketControleCliente = new Socket( InfoServidorPrincipal.SERVIDOR_PRINCIPAL.ip,
                                                InfoServidorPrincipal.SERVIDOR_PRINCIPAL.porta);
        }
        catch(Exception ex) {
            jLabelBarraStatus.setText("Erro em inciar comunicação com o Servidor: " + ex);
        }
    }

    // Envia uma solicitação de downloada
    private void solicitaDownload() {
        // jLabelBarraStatus.setText(janelaPai.getInfoDeArquivo().toString());
        jLabelArquivo.setText("Arquivo: "   + janelaPai.getInfoDeArquivo().getNome());
        jLabelServidor.setText("Servidor: " + janelaPai.getInfoDeArquivo().getInfoServidorEscravo().getNome());

        // Envia solicitação de Download...
        try {
            saidaControleSolicitacao = new ObjectOutputStream(socketControleCliente.getOutputStream());
            saidaControleSolicitacao.writeObject(TipoSolicitacao.DOWNLOAD);
        }
        catch(Exception ex) {
            jLabelBarraStatus.setText("Erro ao enviar solicitação de Download: " + ex);
            return;
        }

        // Faz Download do arquivo...
        downloadDeArquivo();
    }

    // Este metodo faz o download do arquivo...
    // ainda n;
    private void downloadDeArquivo() {
        try {
            InputStream in = socketControleCliente.getInputStream();
            InputStreamReader isr = new InputStreamReader(in);
            BufferedReader reader = new BufferedReader(isr);
            String fName = reader.readLine();
            System.out.println(fName);
            File f1 = new File("CAMINO PARA DESTINO DO FILE/" + fName);
            FileOutputStream out = new FileOutputStream(f1);
            int c;

            while ((c = in.read()) != -1) {
                out.write(c);
            }
        }
        catch(Exception ex) {

        }
    }

    /*
     * Declaração das minhas varíaveis
     */

    // Socket para conexão de controle...
    private Socket              socketControleCliente;
    private ObjectInputStream   entradaControleResposta;
    private ObjectOutputStream  saidaControleSolicitacao;
    private JanelaPrincipal     janelaPai;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JLabel jLabelArquivo;
    private javax.swing.JLabel jLabelBarraStatus;
    private javax.swing.JLabel jLabelServidor;
    private javax.swing.JPanel jPanelBarraStatus;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JSeparator jSeparator;
    // End of variables declaration//GEN-END:variables
}
