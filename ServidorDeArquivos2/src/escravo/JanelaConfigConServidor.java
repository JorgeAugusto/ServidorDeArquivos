/**
 * Classe que modela a GUI da Janela de Configuração de Conexão com o Servidor
 * @author: Jorge Augusto C. dos Reis
 * @data..: 18/03/2013 às 04:34
 * @Descrição:
 * Esta classe modela a GUI da Janela de configuração da conexão com o servidor
 * basicamente ela carrega e salva as informações ta JTable em um arquivo,
 * usando os métodos da classe InfoServidor
 */

package escravo;

import base.InfoServidor;
import java.io.File;
import javax.swing.table.DefaultTableModel;

public class JanelaConfigConServidor extends javax.swing.JDialog {

    /**
     * Creates new form JanelaCadServEscravo
     */
    public JanelaConfigConServidor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Coloca janela no centro da tela
        setLocationRelativeTo(null);
        janelaPai = (JanelaEscravo) parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonEditar = new javax.swing.JButton();
        jButtonFechar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConfigCon = new javax.swing.JTable();
        jButtonSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuração de Conexão com Servidor Principal");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                windowOpenedActionPerformed(evt);
            }
        });

        jButtonEditar.setText("Editar");

        jButtonFechar.setText("Fechar");
        jButtonFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharActionPerformed(evt);
            }
        });

        jTableConfigCon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Servidor", "localhsot", "2000"}
            },
            new String [] {
                "Nome*", "IP", "Porta"
            }
        ));
        jTableConfigCon.setColumnSelectionAllowed(true);
        jTableConfigCon.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableConfigCon);
        jTableConfigCon.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableConfigCon.getColumnModel().getColumn(0).setMinWidth(150);
        jTableConfigCon.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTableConfigCon.getColumnModel().getColumn(0).setMaxWidth(60150);

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonFechar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFechar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharActionPerformed
        fecharJanela();
    }//GEN-LAST:event_jButtonFecharActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        //
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void windowOpenedActionPerformed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowOpenedActionPerformed
        carregaConfigConServidor();
    }//GEN-LAST:event_windowOpenedActionPerformed

    /* Aqui inicia a implementaçãos dos meus métodos, deste ponto em diante
     * não existe código que não tenha sido feito por mim.
     */

    // Este método fecha a janela de cadatro de servidores escravos
    private void fecharJanela() {
        dispose();
    }

    /**
     * Carrega informações de conexão com o servidor principal, apartir do arquivo
     * caso o arquivo de configuração não exista, cria o mesmo e carrefa
     */
    private void carregaConfigConServidor() {
        janelaPai.carregaConfigConServidor();

        // DefaultTableModel   model = (DefaultTableModel) jt
    }

    /**
     * Declaração dos meus atributos.
     */
    JanelaEscravo janelaPai;



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonFechar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableConfigCon;
    // End of variables declaration//GEN-END:variables

}
